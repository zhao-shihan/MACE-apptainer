Bootstrap: localimage
From: {{BASE}}

%arguments
    BASE=

%post
    apt -y update
    apt -y full-upgrade
    apt -y install libtbb-dev
    apt -y autopurge
    apt clean

    cd /opt

    VECGEOM_CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_STANDARD=17 -DCMAKE_CXX_STANDARD=20 -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON -DBUILD_SHARED_LIBS=OFF -DVECGEOM_BACKEND=Vc -DVECGEOM_GDML=ON -DVECGEOM_FAST_MATH=ON"
    cd vecgeom-build

    mkdir build-x86-64-v4
    cd build-x86-64-v4
    #                                                                                                                                                       max value for VECGEOM_VECTOR is avx2...
    cmake -G Ninja ../src/ $VECGEOM_CMAKE_OPTIONS -DCMAKE_INSTALL_PREFIX=/opt/x86-64-v4/vecgeom -DCMAKE_C_FLAGS='-march=x86-64-v4' -DCMAKE_CXX_FLAGS='-march=x86-64-v4' -DVECGEOM_VECTOR=avx2 -DUSE_LIBMVEC=ON -DTARGET_ARCHITECTURE=x86-64-v4
    ninja
    ninja install
    cd ..

    mkdir build-x86-64-v3
    cd build-x86-64-v3
    cmake -G Ninja ../src/ $VECGEOM_CMAKE_OPTIONS -DCMAKE_INSTALL_PREFIX=/opt/x86-64-v3/vecgeom -DCMAKE_C_FLAGS='-march=x86-64-v3' -DCMAKE_CXX_FLAGS='-march=x86-64-v3' -DVECGEOM_VECTOR=avx2 -DUSE_LIBMVEC=ON -DTARGET_ARCHITECTURE=x86-64-v3
    ninja
    ninja install
    cd ..

    mkdir build-x86-64-v2
    cd build-x86-64-v2
    cmake -G Ninja ../src/ $VECGEOM_CMAKE_OPTIONS -DCMAKE_INSTALL_PREFIX=/opt/x86-64-v2/vecgeom -DCMAKE_C_FLAGS='-march=x86-64-v2' -DCMAKE_CXX_FLAGS='-march=x86-64-v2' -DVECGEOM_VECTOR=sse4.2 -DUSE_LIBMVEC=ON -DTARGET_ARCHITECTURE=x86-64-v2
    ninja
    ninja install
    cd ..

    cd ..
    rm -rf vecgeom-build

    cd root-build
    for arch in 'x86-64-v4' 'x86-64-v3' 'x86-64-v2'; do
        VECGEOM_DIR=/opt/$arch/vecgeom
        export LIBRARY_PATH=$VECGEOM_DIR/lib:$LIBRARY_PATH
        export LD_LIBRARY_PATH=$VECGEOM_DIR/lib:$LD_LIBRARY_PATH
        export CMAKE_PREFIX_PATH=$VECGEOM_DIR:$CMAKE_PREFIX_PATH
        mkdir build-$arch
        cd build-$arch
        cmake -G Ninja ../src/ -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_STANDARD=17 -DCMAKE_CXX_STANDARD=20 -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON -Dfftw3=ON -Dgviz=ON -Dmathmore=ON -Dmpi=ON -Dqt5web=ON -Dshadowpw=ON -Dsoversion=ON -Dunuran=ON -During=ON -Dvc=ON -Dveccore=ON -Dvecgeom=ON -DCMAKE_INSTALL_PREFIX=/opt/$arch/root -DCMAKE_C_FLAGS="-march=$arch" -DCMAKE_CXX_FLAGS="-march=$arch" -DUSE_LIBMVEC=ON -DTARGET_ARCHITECTURE=$arch
        ninja
        ninja install
        cd ..
    done
    cd ..
    rm -rf root-build

    cd geant4-build
    for arch in 'x86-64-v4' 'x86-64-v3' 'x86-64-v2'; do
        VECGEOM_DIR=/opt/$arch/vecgeom
        export LIBRARY_PATH=$VECGEOM_DIR/lib:$LIBRARY_PATH
        export LD_LIBRARY_PATH=$VECGEOM_DIR/lib:$LD_LIBRARY_PATH
        export CMAKE_PREFIX_PATH=$VECGEOM_DIR:$CMAKE_PREFIX_PATH
        mkdir build-$arch
        cd build-$arch
        cmake -G Ninja ../src/ -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_STANDARD=17 -DCMAKE_CXX_STANDARD=20 -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON -DGEANT4_INSTALL_DATADIR=/opt/geant4-data -DGEANT4_USE_GDML=ON -DGEANT4_USE_OPENGL_X11=ON -DGEANT4_USE_QT=ON -DGEANT4_USE_RAYTRACER_X11=ON -DGEANT4_USE_SYSTEM_ZLIB=ON -DBUILD_SHARED_LIBS=ON -DBUILD_STATIC_LIBS=ON -DGEANT4_INSTALL_PACKAGE_CACHE=OFF -DGEANT4_INSTALL_DATASETS_TENDL=ON -DGEANT4_USE_TBB=ON -DGEANT4_USE_USOLIDS=ON -DCMAKE_INSTALL_PREFIX=/opt/$arch/geant4 -DCMAKE_C_FLAGS="-march=$arch" -DCMAKE_CXX_FLAGS="-march=$arch" -DUSE_LIBMVEC=ON -DTARGET_ARCHITECTURE=$arch
        ninja
        ninja install
        cd ..
    done
    cd ..
    rm -rf geant4-build

    cd garfield++-build
    for arch in 'x86-64-v4' 'x86-64-v3' 'x86-64-v2'; do
        VECGEOM_DIR=/opt/$arch/vecgeom
        export LIBRARY_PATH=$VECGEOM_DIR/lib:$LIBRARY_PATH
        export LD_LIBRARY_PATH=$VECGEOM_DIR/lib:$LD_LIBRARY_PATH
        export CMAKE_PREFIX_PATH=$VECGEOM_DIR:$CMAKE_PREFIX_PATH
        ROOT_DIR=/opt/$arch/root
        export PATH=$ROOT_DIR/bin:$PATH
        export LIBRARY_PATH=$ROOT_DIR/lib:$LIBRARY_PATH
        export LD_LIBRARY_PATH=$ROOT_DIR/lib:$LD_LIBRARY_PATH
        export PYTHONPATH=$ROOT_DIR/lib:$PYTHONPATH
        export MANPATH=$ROOT_DIR/man:$MANPATH
        export CMAKE_PREFIX_PATH=$ROOT_DIR:$CMAKE_PREFIX_PATH
        export JUPYTER_PATH=$ROOT_DIR/etc/notebook:$JUPYTER_PATH
        export JUPYTER_CONFIG_DIR=$ROOT_DIR/etc/notebook:$JUPYTER_CONFIG_DIR
        export ROOTSYS=$ROOT_DIR
        export CLING_STANDARD_PCH=none
        mkdir build-$arch
        cd build-$arch
        cmake ../src/ -DCMAKE_INSTALL_PREFIX=/opt/$arch/garfield++ -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_Fortran_COMPILER=gfortran -DCMAKE_C_STANDARD=17 -DCMAKE_CXX_STANDARD=20 -DCMAKE_C_FLAGS="-march=$arch" -DCMAKE_CXX_FLAGS="-march=$arch" -DCMAKE_Fortran_FLAGS="-march=$arch" -DBUILD_SHARED_LIBS=ON -DUSE_LIBMVEC=ON -DTARGET_ARCHITECTURE=$arch
        make -j$(grep "processor" /proc/cpuinfo | sort | uniq | wc -l)
        make install
        cd ..
    done
    cd ..
    rm -rf garfield++-build

%environment
    VECGEOM_DIR=/opt/$RUNTIME_CPU_ARCH/vecgeom
    export LIBRARY_PATH=$VECGEOM_DIR/lib:$LIBRARY_PATH
    export LD_LIBRARY_PATH=$VECGEOM_DIR/lib:$LD_LIBRARY_PATH
    export CMAKE_PREFIX_PATH=$VECGEOM_DIR:$CMAKE_PREFIX_PATH

    GEANT4_DIR=/opt/$RUNTIME_CPU_ARCH/geant4
    export PATH=$GEANT4_DIR/bin:$PATH
    export LIBRARY_PATH=$GEANT4_DIR/lib:$LIBRARY_PATH
    export LD_LIBRARY_PATH=$GEANT4_DIR/lib:$LD_LIBRARY_PATH
    export CMAKE_PREFIX_PATH=$GEANT4_DIR:$CMAKE_PREFIX_PATH

    ROOT_DIR=/opt/$RUNTIME_CPU_ARCH/root
    export PATH=$ROOT_DIR/bin:$PATH
    export LIBRARY_PATH=$ROOT_DIR/lib:$LIBRARY_PATH
    export LD_LIBRARY_PATH=$ROOT_DIR/lib:$LD_LIBRARY_PATH
    export PYTHONPATH=$ROOT_DIR/lib:$PYTHONPATH
    export MANPATH=$ROOT_DIR/man:$MANPATH
    export CMAKE_PREFIX_PATH=$ROOT_DIR:$CMAKE_PREFIX_PATH
    export JUPYTER_PATH=$ROOT_DIR/etc/notebook:$JUPYTER_PATH
    export JUPYTER_CONFIG_DIR=$ROOT_DIR/etc/notebook:$JUPYTER_CONFIG_DIR
    export ROOTSYS=$ROOT_DIR
    export CLING_STANDARD_PCH=none

    export GARFIELD_INSTALL=/opt/$RUNTIME_CPU_ARCH/garfield++
    export LIBRARY_PATH=$GARFIELD_INSTALL/lib:$LIBRARY_PATH
    export LD_LIBRARY_PATH=$GARFIELD_INSTALL/lib:$LD_LIBRARY_PATH
    export CMAKE_PREFIX_PATH=$GARFIELD_INSTALL:$CMAKE_PREFIX_PATH
    export HEED_DATABASE=$GARFIELD_INSTALL/share/Heed/database
    export PYTHONPATH=$(find $GARFIELD_INSTALL/lib -name site-packages | sed -n 1p):$PYTHONPATH
