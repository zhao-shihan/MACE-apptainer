Bootstrap: localimage
From: rgb-base.sif

%arguments
    MPICH_VERSION=4.2.1

%post
    apt -y update
    apt -y full-upgrade
    apt -y install rdma-core librdmacm-dev libglu1-mesa-dev libglew-dev libftgl-dev libafterimage-dev qt3d5-dev libxmu-dev qtwebengine5-dev
    apt -y autopurge
    apt clean

    cd /opt
    mkdir mpich-build
    cd mpich-build
    wget -c -t=999 https://www.mpich.org/static/downloads/{{MPICH_VERSION}}/mpich-{{MPICH_VERSION}}.tar.gz -O mpich.tar.gz
    tar -xf mpich.tar.gz

    for arch in 'x86-64-v4' 'x86-64-v3' 'x86-64-v2'; do
        mkdir build-$arch
        cd build-$arch
        ../mpich-{{MPICH_VERSION}}/configure --build=x86_64-linux-gnu --prefix=/opt/$arch/mpich --disable-error-checking --enable-tag-error-bits --disable-timing --disable-g --disable-mpit-pvars --enable-fast=O3,ndebug,alwaysinline --enable-romio --enable-fortran --enable-threads=multiple --disable-dependency-tracking --enable-shared --disable-static --with-device=ch4:ofi --with-ch4-shmmods=posix CC=clang CXX=clang++ CFLAGS="-march=$arch" CXXFLAGS="-march=$arch" FCFLAGS="-march=$arch" FFLAGS="-march=$arch" &
        cd ..
    done
    wait

    for arch in 'x86-64-v4' 'x86-64-v3' 'x86-64-v2'; do
        cd build-$arch
        make -j$(grep "processor" /proc/cpuinfo | sort | uniq | wc -l) &
        cd ..
    done
    wait

    for arch in 'x86-64-v4' 'x86-64-v3' 'x86-64-v2'; do
        cd build-$arch
        make install
        cd ..
    done

    cd ..
    rm -rf mpich-build

%labels
    MPI mpich-{{MPICH_VERSION}}

%environment
    cpu_has_feature() {
        if test -n "$(grep flags /proc/cpuinfo | grep $1)"; then
            # 0 = true
            return 0
        else
            # 1 = false
            return 1
        fi
    }

    if cpu_has_feature avx512f && cpu_has_feature avx512bw && cpu_has_feature avx512cd && cpu_has_feature avx512dq && cpu_has_feature avx512vl; then
        RUNTIME_CPU_ARCH=x86-64-v4
    elif cpu_has_feature avx && cpu_has_feature avx2 && cpu_has_feature bmi && cpu_has_feature bmi2 && cpu_has_feature f16c && cpu_has_feature fma && cpu_has_feature movbe && cpu_has_feature xsave; then
        RUNTIME_CPU_ARCH=x86-64-v3
    elif cpu_has_feature cx16 && cpu_has_feature lahf && cpu_has_feature popcnt && cpu_has_feature sse3 && cpu_has_feature sse4.1 && cpu_has_feature sse4.2 && cpu_has_feature ssse3; then
        RUNTIME_CPU_ARCH=x86-64-v2
    else
        echo "Warning: It seems that even x86-64-v2 is not available. Try another machine if you cannot run."
        RUNTIME_CPU_ARCH=x86-64-v2
    fi

    MPICH_DIR=/opt/$RUNTIME_CPU_ARCH/mpich
    export PATH=$MPICH_DIR/bin:$PATH
    export LIBRARY_PATH=$MPICH_DIR/lib:$LIBRARY_PATH
    export LD_LIBRARY_PATH=$MPICH_DIR/lib:$LD_LIBRARY_PATH
    export MANPATH=$MPICH_DIR/share/man:$MANPATH
    export CMAKE_PREFIX_PATH=$MPICH_DIR:$CMAKE_PREFIX_PATH
